---  
import "@/styles/animations.css";  
---  

<slot />  

<!-- Only run observer fallback when scroll‑timeline is NOT supported -->
<script is:inline client:load>
  document.addEventListener('DOMContentLoaded', () => {
    console.log("timeline support", CSS.supports('animation-timeline','view()'));
    if (!CSS.supports('animation-timeline','view()')) {
      console.log('Scroll timeline not supported, using IntersectionObserver fallback');
      // html already has `use-io` by default
      // attach IO to any .load elements
      const io = new IntersectionObserver((entries, obs) => {
        for (const { target, isIntersecting } of entries) {
          if (isIntersecting) {
            target.classList.add('visible');
            obs.unobserve(target);
          }
        }
      }, { threshold: 0.1 });
      document.querySelectorAll('.load').forEach(el => io.observe(el));
    } else {
      // Remove use-io to allow scroll‑timeline & non-.load animations
      document.documentElement.classList.remove('use-io');
    }
  });
</script>
