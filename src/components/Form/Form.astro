---
// src/components/Forms/Form.astro
import Button from "@/components/Button/Button";
import { SiteData } from "@/SiteData";

const {
  name = "generic-form",
  method = "post",
  action,
  class: className = "",
  formLabel = "",
  labelClass = "block h6 text-dark-secondary mb-2",
  formClass = "",
  submitClass = "w-full lg:w-auto mt-2 justify-center cursor-pointer",
  submitLabel = "Submit Form",
  showConsent = true,
  consentText = `I consent to have ${SiteData.title} store my submitted information so they can respond`,
  consentLearnMoreLabel = "Learn more",
  consentLearnMoreUrl = "/privacy-policy",
  consentWrapperClass = "flex items-start text-left text-dark-secondary mb-4",
  consentInputClass = "mr-2 mt-[4px] w-4 h-4 checked:accent-primary",
  consentLabelClass = labelClass + " m-0",
} = Astro.props;
---

<div class={className}>
  {
    formLabel && (
      <label class={labelClass} for={name}>
        {formLabel}
      </label>
    )
  }
  <form
    id={name}
    name={name}
    method={method}
    action={action}
    class={formClass}
    autocomplete="off"
  >
    <slot />

    {/** — inject consent checkbox here — */}
    {
      showConsent && (
        <div class={consentWrapperClass}>
          <input
            type="checkbox"
            id="consent"
            name="consent"
            required
            class={consentInputClass}
          />
          <label for="consent" class={consentLabelClass}>
            {consentText}&nbsp;
            <a href={consentLearnMoreUrl} class="underline">
              {consentLearnMoreLabel}
            </a>
          </label>
        </div>
      )
    }

    {
      Astro.slots.has("submit") ? (
        <slot name="submit" />
      ) : (
        <Button type="submit" variant="primary" className={submitClass}>
          {submitLabel}
        </Button>
      )
    }
  </form>
</div>

<script>
  // Clear form if we came back from Formspree
  document.addEventListener("DOMContentLoaded", () => {
    // Check if URL contains success indicator or if referrer is Formspree
    const urlParams = new URLSearchParams(window.location.search);
    const isFromFormspree = document.referrer.includes('formspree.io');
    
    if (isFromFormspree || urlParams.get('submitted') === 'true') {
      // Clear all forms on the page
      document.querySelectorAll('form').forEach(form => {
        form.reset();
        // Also clear any auto-filled fields
        form.querySelectorAll('input, textarea, select').forEach(field => {
          if (field.type === 'checkbox' || field.type === 'radio') {
            field.checked = false;
          } else {
            field.value = '';
          }
        });
      });
      
      // Show success message
      const successDiv = document.createElement('div');
      successDiv.className = 'p-4 bg-primary text-white rounded mb-4';
      successDiv.textContent = 'Thank you! Your message has been sent successfully.';
      
      const firstForm = document.querySelector('form');
      if (firstForm && firstForm.parentNode) {
        firstForm.parentNode.insertBefore(successDiv, firstForm);
        
        // Remove success message after 5 seconds
        setTimeout(() => {
          successDiv.remove();
        }, 5000);
      }
      
      // Clean URL
      if (urlParams.get('submitted') === 'true') {
        urlParams.delete('submitted');
        const newUrl = window.location.pathname + (urlParams.toString() ? '?' + urlParams.toString() : '');
        window.history.replaceState({}, '', newUrl);
      }
    }
  });
</script>